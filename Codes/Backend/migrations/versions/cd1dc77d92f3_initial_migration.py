"""Initial migration.

Revision ID: cd1dc77d92f3
Revises: 
Create Date: 2025-03-18 06:50:42.004312

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cd1dc77d92f3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('students_plans_info')
    op.execute("DROP TABLE verses CASCADE")
    op.drop_table('recitation_session')
    op.execute("DROP TABLE users CASCADE")
    op.drop_table('students')
    op.drop_table('surahs')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('surahs',
    sa.Column('surah_id', sa.INTEGER(), server_default=sa.text("nextval('surahs_surah_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('no_verses', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('surah_id', name='surahs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('students',
    sa.Column('student_id', sa.INTEGER(), server_default=sa.text("nextval('students_student_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gender', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('nationality', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('student_phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('parent_phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('memorized_parts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint("gender = ANY (ARRAY['M'::bpchar, 'F'::bpchar])", name='students_gender_check'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='students_user_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('student_id', name='students_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('users_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('recitation_session',
    sa.Column('session_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('start_verse_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('end_verse_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('is_accepted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pages_count', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('letters_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rl_reward_signal', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint("type::text = ANY (ARRAY['New_Memorization'::character varying, 'Minor_Revision'::character varying, 'Major_Revision'::character varying]::text[])", name='recitation_session_type_check'),
    sa.ForeignKeyConstraint(['end_verse_id'], ['verses.verse_id'], name='recitation_session_end_verse_id_fkey'),
    sa.ForeignKeyConstraint(['start_verse_id'], ['verses.verse_id'], name='recitation_session_start_verse_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], name='recitation_session_student_id_fkey'),
    sa.PrimaryKeyConstraint('session_id', name='recitation_session_pkey')
    )
    op.create_table('verses',
    sa.Column('verse_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('surah_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('begin_verse', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('order_in_quraan', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reverse_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_in_surah', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('page_no', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('letters_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('weight_on_page', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('verse_difficulty', sa.REAL(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['surah_id'], ['surahs.surah_id'], name='verses_surah_id_fkey'),
    sa.PrimaryKeyConstraint('verse_id', name='verses_pkey')
    )
    op.create_table('students_plans_info',
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('memorization_direction', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_verse_recited', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('revision_direction', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('new_memorization_amount', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('small_revision_amount', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('large_revision_amount', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('memorization_days', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], name='students_plans_info_student_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('student_id', name='students_plans_info_pkey')
    )
    # ### end Alembic commands ###
